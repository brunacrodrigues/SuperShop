@model IEnumerable<SuperShop.Data.Entities.OrderDetailTemp>
@{
	ViewData["Title"] = "Create";
}

<h2>Create</h2>

<p>
	<a asp-action="AddProduct" class="btn btn-success">Add Product</a>
	<a asp-action="ConfirmOrder" class="btn btn-primary">Confirm Order</a>
</p>
<table class="table">
	<thead>
		<tr>
			<th>
				@* Corrigido: Usar string literal ou DisplayName de uma propriedade específica de OrderDeitalTemp *@
				Product Name
			</th>
			<th>
				@* Corrigido: Usar string literal ou DisplayName de uma propriedade específica de OrderDeitalTemp *@
				Price
			</th>
			<th>
				@* Corrigido: Usar string literal ou DisplayName de uma propriedade específica de OrderDeitalTemp *@
				Quantity
			</th>
			<th>
				@* Corrigido: Usar string literal ou DisplayName de uma propriedade específica de OrderDeitalTemp *@
				Value
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Product.Name) @* Corrigido para DisplayFor *@
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Price) @* Corrigido para DisplayFor - assumindo que OrderDeitalTemp.Price existe e é o preço unitário *@
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Quantity) @* Corrigido para DisplayFor *@
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Value) @* Corrigido para DisplayFor *@
				</td>
				<td>
					<a asp-action="Increase" asp-route-id="@item.Id" class="btn btn-warning"><i class="fa fa-plus"></i></a> @* Corrigido: asp-route-id="@item.Id" *@
					<a asp-action="Decrease" asp-route-id="@item.Id" class="btn btn-info"><i class="fa fa-minus"></i></a> @* Corrigido: asp-route-id="@item.Id" *@
					<a asp-action="DeleteItem" asp-route-id="@item.Id" class="btn btn-danger">Delete</a> @* Corrigido: asp-route-id="@item.Id" *@
				</td>
			</tr>
		}
	</tbody>
</table>